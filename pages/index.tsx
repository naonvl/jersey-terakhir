import cn from 'clsx'
import { useState, useRef, MouseEvent, useEffect, Suspense } from 'react'
import Head from 'next/head'
import type { NextPage } from 'next'
import { Text } from '@components/Text'
import { Navbar } from '@components/Nav'
import { Dropdowns } from '@components/Dropdowns'
import { LayoutFill } from '@components/Image'
import { SketchPicker } from '@components/ColorPicker'
import { Select } from '@components/Input'
import InputNumber from '@components/Input/InputNumber'
import { Shirt } from '@components/Objects'
import { Environment, ContactShadows, OrbitControls } from '@react-three/drei'
import { Canvas as ThreeCanvas } from '@react-three/fiber'
import { Canvas } from '@components/Fabric'

const jerseyStyles = [
  {
    image: '/Simple.png',
    text: 'Simple',
  },
  {
    image: '/Stealth.png',
    text: 'Champion',
  },
  {
    image: '/Ice.png',
    text: 'CLIMBER',
  },
  {
    image: '/Bubbles.png',
    text: 'Bubbles',
  },
]

const options = [
  {
    value: 'roboto',
    text: 'Roboto',
  },
]

const Home: NextPage = () => {
  const dropdownRef = useRef(null)
  const inputNumberRef = useRef<HTMLInputElement>(null)
  const [step, setStep] = useState(1)
  const [order, setOrder] = useState(1)
  const [dropdownOpen, setDropdownOpen] = useState({
    stepOne: true,
    stepTwo: false,
    stepThree: false,
  })
  const [addStep, setAddStep] = useState({
    name: '',
    fontSize: 16,
    fontFamily: 'Roboto',
  })

  useEffect(() => {
    switch (step) {
      case 1:
        return setDropdownOpen({
          stepOne: true,
          stepTwo: false,
          stepThree: false,
        })
      case 2:
        return setDropdownOpen({
          stepOne: false,
          stepTwo: true,
          stepThree: false,
        })
      case 3:
        return setDropdownOpen({
          stepOne: false,
          stepTwo: false,
          stepThree: true,
        })

      default:
        return setDropdownOpen({
          stepOne: true,
          stepTwo: false,
          stepThree: false,
        })
    }
  }, [step])

  const decrementAction = () => {
    if (order == 1) {
      return setOrder(1)
    }

    return setOrder(order - 1)
  }

  const incrementAction = () => {
    return setOrder(order + 1)
  }

  const handleChange = (e: any) => {
    setAddStep({ ...addStep, [e.target.name]: e.target.value })
  }

  const handlePrev = () => {
    if (step == 1) {
      return setStep(1)
    }

    setStep(step - 1)
  }

  const handleNext = () => {
    if (step == 3) {
      return setStep(3)
    }

    setStep(step + 1)
  }

  const handleOpen = (e: MouseEvent<HTMLButtonElement, MouseEvent>) => {
    const label: string | null = e.currentTarget.ariaLabel

    if (label === null) return null

    switch (label) {
      case 'stepOne':
        return setStep(1)
      case 'stepTwo':
        return setStep(2)
      case 'stepThree':
        return setStep(3)
      default:
        return setStep(1)
    }
  }

  return (
    <>
      <Head>
        <title>Cyclists</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <div className="bg-[#f9f9f9] py-2 px-4 lg:px-16 lg:py-4">
        <Text className="text-xs">
          Home | Jersey Customiser. Your jersey just the way you want it.
        </Text>
      </div>

      <div className="flex px-4 lg:px-16 flex-col lg:flex-row">
        <div className="lg:w-1/2">
          {/* Mobile */}
          <div className="my-5 lg:hidden">
            {/* <Canvas
              shadows
              camera={{ position: [0, 60, 4], fov: 50 }}
              style={{ height: '300px' }}
            >
              <ambientLight intensity={0.7} />
              <spotLight
                intensity={0.5}
                angle={0.5}
                penumbra={1}
                position={[10, 50, 10]}
                castShadow
              />
              <Suspense fallback={null}>
                <Shirt />
                <Environment preset="city" />
                <ContactShadows
                  position={[0, -0.8, 0]}
                  opacity={0.25}
                  scale={10}
                  blur={1.5}
                  far={0.8}
                />
              </Suspense>
              <OrbitControls
                minPolarAngle={Math.PI / 2.8}
                maxPolarAngle={Math.PI / 1.7}
                enableZoom={false}
                enablePan={false}
              />
            </Canvas> */}
          </div>

          <div className="mb-3 mt-5">
            <div className="flex overflow-hidden md:justify-between">
              <div className="inline-flex flex-col items-center">
                <Text
                  className={cn(
                    'text-2xl lg:text-3xl font-bold w-full mr-auto',
                    {
                      ['text-pink-600']: step == 1,
                    }
                  )}
                >
                  Step 1
                </Text>
                <Text
                  className={cn('text-xs uppercase', {
                    ['text-pink-600']: step == 1,
                  })}
                >
                  choose your style
                </Text>
              </div>
              <div className="inline-flex flex-col items-center">
                <Text
                  className={cn(
                    'text-2xl lg:text-3xl font-bold w-full mr-auto',
                    {
                      ['text-pink-600']: step == 2,
                    }
                  )}
                >
                  Step 2
                </Text>
                <Text
                  className={cn('text-xs uppercase', {
                    ['text-pink-600']: step == 2,
                  })}
                >
                  choose your colours
                </Text>
              </div>
              <div className="inline-flex flex-col items-center">
                <Text
                  className={cn(
                    'text-2xl lg:text-3xl font-bold w-full mr-auto',
                    {
                      ['text-pink-600']: step == 3,
                    }
                  )}
                >
                  Step 3
                </Text>
                <Text
                  className={cn('text-xs uppercase', {
                    ['text-pink-600']: step == 3,
                  })}
                >
                  add text [If you want]
                </Text>
              </div>
            </div>
          </div>

          <div className="my-5">
            <Dropdowns
              ref={dropdownRef}
              onClick={(e: any) => handleOpen(e)}
              open={dropdownOpen.stepOne}
              buttonName="Choose your style"
              rootClass="w-full"
              menuClass="w-full"
              label="stepOne"
            >
              <div className="flex overflow-hidden">
                {jerseyStyles.map(({ text, image }, index) => (
                  <div
                    className="cursor-pointer w-full justify-center items-center"
                    key={index}
                  >
                    <LayoutFill
                      alt={text}
                      src={image}
                      objectFit="contain"
                      width="100%"
                      height={95}
                      quality={60}
                      style={{
                        maxWidth: '177px',
                      }}
                    />
                    <Text className="mt-2 uppercase font-bold text-center text-sm">
                      {text}
                    </Text>
                  </div>
                ))}
              </div>
            </Dropdowns>

            <Dropdowns
              ref={dropdownRef}
              onClick={(e: any) => handleOpen(e)}
              open={dropdownOpen.stepTwo}
              buttonName="Choose your colours"
              rootClass="w-full"
              menuClass="w-full"
              label="stepTwo"
            >
              <div className="flex flex-col overflow-hidden">
                <div className="inline-flex w-full justify-between items-center">
                  <SketchPicker color={{ r: 241, g: 19, b: 127, a: 100 }} />
                  <Text className="font-bold text-gray-600">
                    Main Colour or{' '}
                    <span className="underline cursor-pointer">
                      Choose Pattern
                    </span>
                  </Text>
                  <LayoutFill
                    alt="Cyclist Cusotm Jersey"
                    src="/kein-muster.svg"
                    width="100%"
                    height={35}
                    style={{
                      maxWidth: '60px',
                    }}
                    objectFit="contain"
                    quality={60}
                  />
                </div>

                <div className="inline-flex w-full justify-between items-center">
                  <SketchPicker color={{ r: 19, g: 218, b: 127, a: 100 }} />
                  <Text className="font-bold text-gray-600">
                    2nd Colour or{' '}
                    <span className="underline cursor-pointer">
                      Choose Pattern
                    </span>
                  </Text>
                  <LayoutFill
                    alt="Cyclist Cusotm Jersey"
                    src="/kein-muster.svg"
                    width="100%"
                    height={35}
                    style={{
                      maxWidth: '60px',
                    }}
                    objectFit="contain"
                    quality={60}
                  />
                </div>

                <div className="inline-flex w-full justify-between items-center">
                  <SketchPicker color={{ r: 241, g: 19, b: 19, a: 100 }} />
                  <Text className="font-bold text-gray-600">
                    3rd Colour or{' '}
                    <span className="underline cursor-pointer">
                      Choose Pattern
                    </span>
                  </Text>
                  <LayoutFill
                    alt="Cyclist Cusotm Jersey"
                    src="/kein-muster.svg"
                    width="100%"
                    height={35}
                    style={{
                      maxWidth: '60px',
                    }}
                    objectFit="contain"
                    quality={60}
                  />
                </div>

                <div className="inline-flex w-full justify-between items-center">
                  <SketchPicker color={{ r: 19, g: 241, b: 55, a: 100 }} />
                  <Text className="font-bold text-gray-600">
                    4th Colour or{' '}
                    <span className="underline cursor-pointer">
                      Choose Pattern
                    </span>
                  </Text>
                  <LayoutFill
                    alt="Cyclist Cusotm Jersey"
                    src="/kein-muster.svg"
                    width="100%"
                    height={35}
                    style={{
                      maxWidth: '60px',
                    }}
                    objectFit="contain"
                    quality={60}
                  />
                </div>

                <div className="inline-flex w-full justify-between items-center">
                  <SketchPicker color={{ r: 255, g: 160, b: 0, a: 100 }} />
                  <Text className="font-bold text-gray-600">
                    Collar Colour or{' '}
                    <span className="underline cursor-pointer">
                      Choose Pattern
                    </span>
                  </Text>
                  <LayoutFill
                    alt="Cyclist Cusotm Jersey"
                    src="/kein-muster.svg"
                    width="100%"
                    height={35}
                    style={{
                      maxWidth: '60px',
                    }}
                    objectFit="contain"
                    quality={60}
                  />
                </div>
              </div>
            </Dropdowns>

            <Dropdowns
              ref={dropdownRef}
              onClick={(e: any) => handleOpen(e)}
              open={dropdownOpen.stepThree}
              buttonName="Add text"
              rootClass="w-full"
              menuClass="w-full"
              label="stepThree"
            >
              <div className="flex flex-col overflow-hidden">
                <div className="inline-flex flex-col mb-2">
                  <label
                    htmlFor="addName"
                    className="text-gray-700 font-bold mb-1"
                  >
                    Enter the name you want to add
                  </label>
                  <input
                    id="addName"
                    type="text"
                    className="border border-black placeholder:text-gray-700 text-black px-3 py-2 focus:border-pink-500 focus:ring-pink-500"
                    onChange={handleChange}
                    placeholder="Type your name"
                    name="name"
                    value={addStep.name}
                  />
                </div>
                <div className="inline-flex flex-col mb-3">
                  <label
                    htmlFor="fontSize"
                    className="text-gray-700 font-bold mb-1"
                  >
                    Font Size
                  </label>
                  <input
                    id="fontSize"
                    type="range"
                    step="1"
                    min="1"
                    max="75"
                    name="fontSize"
                    value={addStep.fontSize}
                    onChange={handleChange}
                    className="w-full h-3 bg-gray-200 rounded-lg appearance-none cursor-pointer range-lg"
                  ></input>
                </div>
                <div className="inline-flex flex-col mb-5">
                  <Select
                    name="fontFamily"
                    value={addStep.fontFamily}
                    defaultValue="Roboto"
                    defaultOption="Choose your font"
                    label="Font"
                    id="fontFamily"
                    options={options}
                  />
                </div>
              </div>
            </Dropdowns>
          </div>

          <div className="my-3">
            <div className="bg-pink-200 p-3">
              <Text className="font-bold uppercase text-xs text-black">
                Need a custom design for your club, company or team? we can give
                you exactly what you need with no minimum order and quick
                turnaround time.{' '}
                <span className="text-pink-500">just contact us</span>.
              </Text>
            </div>
          </div>

          <div className="my-2">
            <div className="flex justify-between">
              <button
                type="button"
                className={cn(
                  'text-center py-3 px-6 lg:py-2 lg:px-8 uppercase text-sm',
                  {
                    ['border border-black bg-white text-black']:
                      dropdownOpen.stepOne,
                  },
                  {
                    ['bg-pink-600 border border-pink-600 text-white']:
                      dropdownOpen.stepTwo || dropdownOpen.stepThree,
                  }
                )}
                onClick={handlePrev}
              >
                prev
              </button>
              <button
                type="button"
                className={cn(
                  'text-center py-3 px-6 lg:py-2 lg:px-8 uppercase text-sm',
                  {
                    ['border border-black bg-white text-black']:
                      dropdownOpen.stepThree,
                  },
                  {
                    ['bg-pink-600 border border-pink-600 text-white']:
                      dropdownOpen.stepOne || dropdownOpen.stepTwo,
                  }
                )}
                onClick={handleNext}
              >
                next
              </button>
            </div>
          </div>

          <div className="my-7 w-full flex flex-col md:flex-row md:gap-4">
            <InputNumber
              id="totalOrder"
              name="numberOfPeople"
              onChange={handleChange}
              value={order}
              min={1}
              defaultValue={1}
              decrementAction={decrementAction}
              incrementAction={incrementAction}
              count={order}
              ref={inputNumberRef}
            />
            <button
              type="button"
              className={cn(
                'w-full h-[3.5rem] px-4 text-center py-3 uppercase bg-pink-600 border border-pink-600 text-white my-2'
              )}
            >
              add to cart
            </button>
          </div>
        </div>
        <div className="mx-5 lg:w-1/2 hidden lg:block">
          <ThreeCanvas camera={{ position: [0, 0, 0], fov: 50 }} id="rendered">
            {/* <ambientLight intensity={0.7} /> */}
            {/* <spotLight
              intensity={0.5}
              angle={0.5}
              penumbra={1}
              position={[10, 50, 10]}
              castShadow
            /> */}
            <Suspense fallback={null}>
              <Shirt />
              <Environment preset="city" />
              {/* <ContactShadows
                position={[0, -0.8, 0]}
                opacity={0.25}
                scale={10}
                blur={1.5}
                far={0.8}
              /> */}
            </Suspense>
            <OrbitControls
              minPolarAngle={Math.PI / 2.8}
              maxPolarAngle={Math.PI / 1.7}
              minDistance={60}
              minZoom={60}
              maxDistance={90}
              maxZoom={90}
              enableZoom={true}
              enablePan={false}
            />
          </ThreeCanvas>
        </div>
      </div>
      <canvas id="canvas" style={{ display: 'none' }} />
    </>
  )
}

export default Home
